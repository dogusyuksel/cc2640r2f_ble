name: build-and-test

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

on: [pull_request]

jobs:
  build-and-test-build-job:
    runs-on: ubuntu-latest
    steps:

    - name: free space
      run: |
        df . -h
        sudo docker rmi $(docker image ls -aq) >/dev/null 2>&1 || true
        sudo rm -rf \
          /usr/share/dotnet /usr/local/lib/android /opt/ghc \
          /usr/local/share/powershell /usr/share/swift /usr/local/.ghcup \
          /usr/lib/jvm || true
        echo "some directories deleted"
        sudo apt install aptitude -y >/dev/null 2>&1
        sudo aptitude purge aria2 ansible azure-cli shellcheck rpm xorriso zsync \
          esl-erlang firefox gfortran-8 gfortran-9 google-chrome-stable \
          google-cloud-sdk imagemagick \
          libmagickcore-dev libmagickwand-dev libmagic-dev ant ant-optional kubectl \
          mercurial apt-transport-https mono-complete libmysqlclient \
          unixodbc-dev yarn chrpath libssl-dev libxft-dev \
          libfreetype6 libfreetype6-dev libfontconfig1 libfontconfig1-dev \
          snmp pollinate libpq-dev postgresql-client powershell ruby-full \
          sphinxsearch subversion mongodb-org azure-cli microsoft-edge-stable \
          -y -f >/dev/null 2>&1
        sudo aptitude purge google-cloud-sdk -f -y >/dev/null 2>&1
        sudo aptitude purge microsoft-edge-stable -f -y >/dev/null 2>&1 || true
        sudo apt purge microsoft-edge-stable -f -y >/dev/null 2>&1 || true
        sudo aptitude purge '~n ^mysql' -f -y >/dev/null 2>&1
        sudo aptitude purge '~n ^php' -f -y >/dev/null 2>&1
        sudo aptitude purge '~n ^dotnet' -f -y >/dev/null 2>&1
        sudo apt-get autoremove -y >/dev/null 2>&1
        sudo apt-get autoclean -y >/dev/null 2>&1
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        echo "some packages purged"
        df . -h

    - uses: actions/checkout@v4
      with:
        github-server-url: https://github.com/dogusyuksel/cc2640r2f_ble.git
        lfs: true
    
    - name: clone docker and linting
      run: |
        git clone https://github.com/dogusyuksel/embedded_docker.git docker
        git clone https://github.com/dogusyuksel/embedded_linting.git linting

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Project Docker
      uses: docker/build-push-action@v5
      with:
        load: true
        tags: |
          ${{ secrets.DOCKER_REPO }}:master
        context: .
        file: docker/Dockerfile
        pull: true
        push: false
        provenance: false

    - name: Build Check
      run: |
        ./docker/run_docker.sh ${{ secrets.DOCKER_REPO }}:master "cd /workspace && source environment && cd firmware/ble5_simple_peripheral_cc2640r2lp_app && make -C ./FlashROM_StackLibrary/ clean && make -C ./FlashROM_StackLibrary/ all"
